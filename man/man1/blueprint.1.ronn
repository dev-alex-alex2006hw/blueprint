blueprint(1) -- reverse engineer server configuration
=====================================================

## SYNOPSIS

`blueprint` [_command_] [_options_][_..._]  

## DESCRIPTION

`blueprint` programs track packages and system files in Git.  Use stored blueprints to build new environments anytime.  Blueprints can be used to generate Puppet modules, Chef cookbooks, or POSIX shell code.

* `blueprint-list`(1):
  List all blueprints.
* `blueprint-create`(1):
  Create a blueprint.
* `blueprint-rules`(1):
  Create a blueprint from a blueprint-rules file.
* `blueprint-show`(1):
  Generate code from a blueprint.
* `blueprint-diff`(1):
  Save the difference between two blueprints.
* `blueprint-split`(1):
  Split one blueprint into two others interactively.
* `blueprint-prune`(1):
  Select a subset of resources interactively.
* `blueprint-template`(1):
  Render mustache.sh templates locally.
* `blueprint-apply`(1):
  Run a blueprint's generated shell code.
* `blueprint-push`(1):
  Push a blueprint to the Internet.
* `blueprint-pull`(1):
  Pull a blueprint from the Internet.
* `blueprint-destroy`(1):
  Destroy a blueprint.
* `blueprint`(5):
  Blueprint JSON format.
* `blueprintignore`(5):
  Ignore specific files when creating blueprints.
* `blueprint-rules`(5):
  Enumerate resources in blueprints.
* `blueprint.cfg`(5):
  Centralized blueprint service configuration.
* `blueprint-template`(5):
  `mustache.sh` template language syntax.
* `blueprint-template`(7):
  Built-in template data.
* `blueprint`(7):
  Blueprint Python library.

### Plumbing

Much like `git`(1) itself, `blueprint` includes many plumbing tools that make it convenient to inspect blueprints.

* `blueprint-git`(1):
  Low-level access to blueprints.
* `blueprint-show-files`(1):
  Show files in a blueprint.
* `blueprint-show-ignore`(1):
  Show `blueprintignore`(5) rules from a blueprint.
* `blueprint-show-packages`(1):
  Show packages in a blueprint.
* `blueprint-show-services`(1):
  Show services in a blueprint.
* `blueprint-show-sources`(1):
  Show source tarballs in a blueprint.

## FILES

* `~/.blueprints.git`:
  The local repsitory where blueprints are stored, each on its own branch.
* `/etc/blueprint.cfg`, `~/.blueprint.cfg`:
  Optional INI-style configuration files.  See `blueprint.cfg`(5).
* `/etc/blueprintignore`, `~/.blueprintignore`:
  Lists of filename patterns to be ignored when creating blueprints.  See `blueprintignore`(5).
* `/etc/blueprint-template.d`:
  `source`-able POSIX shell scripts ending in `.sh` that set environment variables for use in templates.

## THEME SONG

The Flaming Lips - "The W.A.N.D. (The Will Always Negates Defeat)"

## AUTHOR

Richard Crowley <richard@devstructure.com>
