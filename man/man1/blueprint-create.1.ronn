blueprint-create(1) -- create a blueprint
=========================================

## SYNOPSIS

`blueprint create` [`-d` _subtrahend_] [`-P`|`-C`|`-S`|...] [`-m` _message_] [`-r`] [`-q`] _name_  

## DESCRIPTION

`blueprint-create` creates a list of all installed packages and modified configuration files and stores it in the branch _name_ in the local blueprint repository with the commit _message_ (if given).

If standard input is not a TTY, a blueprint is read from standard input rather than created from the system.  See `blueprint`(5) for the details of the format.

If a _subtrahend_ is given, it is subtracted from the generated or provided blueprint and the difference is committed as _name_.

If one of `--puppet`, `--chef`, `--bcfg2`, `--sh`, or `--cfn` is given, a Puppet module, a Chef cookbook, POSIX shell code, or an AWS CloudFormation template will be generated, written to a file or directory in the current working directory, and its filename will be printed to standard output.

Debian packages, Ruby gems, NPM packages, Python packages, PHP PEAR/PECL packages are enumerated in the blueprint.

The contents of system configuration files in `/etc` that have been created or modified from their packaged versions will be included in the blueprint.  If file is found to have a corresponding template (a file with "`.blueprint-template.mustache`" appended to its pathname) and optionally a corresponding data script (a file with "`.blueprint-template.sh`" appended to its pathname), this `template` and `data` are included in the blueprint rather than the file's literal content.

Anything installed in `/usr/local` will be archived and included in the blueprint, tagged with the architecture of the local system.

`blueprintignore`(5) provides means for ignoring specific files and packages plus treating arbitrary directories as `/usr/local` is treated.

## OPTIONS

* `-d` _subtrahend_, `--diff=`_subtrahend_:
  Blueprint to subtract from the generated blueprint.
* `-P`, `--puppet`:
  Generate a Puppet module.
* `-C`, `--chef`:
  Generate a Chef cookbook.
* `-B`, `--bcfg2`:
  Generate bcfg2 configuration.
* `-S`, `--sh`:
  Generate POSIX shell code.
* `--cfn`:
  Generate an AWS CloudFormation template.
* `-m` _message_, `--message=`_message_:
  Commit message.
* `-r`, `--relaxed`:
  Relax version constraints in generated code.
* `-q`, `--quiet`:
  Operate quietly.
* `-h`, `--help`:
  Show a help message.

## FILES

* `~/.blueprints.git`:
  The local repsitory where blueprints are stored, each on its own branch.
* `/etc/blueprintignore`, `~/.blueprintignore`:
  Lists of filename patterns to be ignored when creating blueprints.  See `blueprintignore`(5).

## THEME SONG

The Flaming Lips - "The W.A.N.D. (The Will Always Negates Defeat)"

## AUTHOR

Richard Crowley <richard@devstructure.com>

## SEE ALSO

Part of `blueprint`(1).
