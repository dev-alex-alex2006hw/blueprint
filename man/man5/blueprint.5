.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "BLUEPRINT" "5" "December 2011" "DevStructure" "Blueprint"
.
.SH "NAME"
\fBblueprint\fR \- blueprint JSON format
.
.SH "SYNOPSIS"
.
.nf

{
  "arch": "ARCHITECTURE",
  "files": {
    "PATHNAME": {
      "content": "CONTENT",
      "encoding": "ENCODING",
      "group": "GROUP",
      "mode": "MODE",
      "owner": "OWNER"
    },
    "PATHNAME": {
      "encoding": "ENCODING",
      "group": "GROUP",
      "mode": "MODE",
      "owner": "OWNER",
      "template": "TEMPLATE"
    },
    "PATHNAME": {
      "dat": "DATA"
      "encoding": "ENCODING",
      "group": "GROUP",
      "mode": "MODE",
      "owner": "OWNER",
      "template": "TEMPLATE"
    },
    "PATHNAME": {
      "encoding": "ENCODING",
      "group": "GROUP",
      "mode": "MODE",
      "owner": "OWNER",
      "source": "SOURCE"
    }
  },
  "packages": {
    "MANAGER": {
      "PACKAGE": ["VERSION"],
      "PACKAGE": ["VERSION", "VERSION"]
    },
    "MANAGER": {
      "PACKAGE": ["VERSION"],
      "PACKAGE": ["VERSION"]
    },
    "rpm": {
      "PACKAGE": ["URL"]
    }
  },
  "services": {
    "MANAGER": {
      "SERVICENAME": {
        "enable": true,
        "ensure": "running",
        "files": ["PATHNAME"],
        "packages": {
          "MANAGER": ["PACKAGE"]
        },
        "sources": ["DIRNAME"]
      }
    }
  },
  "sources": {
    "DIRNAME": "FILENAME",
    "DIRNAME": "URL"
  }
}
.
.fi
.
.P
(Keys and values written in CAPITALS represent variable data\.)
.
.SH "DESCRIPTION"
\fBblueprint\-create\fR(1) commits \fBblueprint\.json\fR to the appropriate branch in the local blueprint repository\. The format described here is used to generate Puppet modules, Chef cookbooks, and POSIX shell scripts in \fBblueprint\-show\fR(1) and \fBblueprint\-apply\fR(1)\. These sections must be followed in order\.
.
.SS "Sources"
Each key in the optional \fBsources\fR object is the fully\-qualified path to a directory\. These directory names should be traversed in alphabetical order\. The associated value is the name of a tarball of the contents of that directory at the time the blueprint was created\. It must be extracted there when the blueprint is applied\. The tarball is stored in Git alongside \fBblueprint\.json\fR\.
.
.P
If \fBsources\fR is present and non\-empty, \fBarch\fR will also be present indicating the architecture of the server that created the blueprint\. If present, this value will be \fIamd64\fR or \fIi386\fR on Debian\-based systems or \fIx86_64\fR or \fIx86\fR on RPM\-based systems\. It is legal to refuse to apply a blueprint with a mismatched architecture\. The architecture can be found by running \fBdpkg \-\-print\-architecture\fR or \fBrpm \-\-eval %_arch\fR as appropriate\.
.
.P
For compatibility with AWS \fBcfn\-init\fR, a URL may appear in the value in place of a filename\. If such a value is encountered, the URL should be fetched and extracted\. Blueprint will never generate such objects\.
.
.SS "Files"
Each key in the optional \fBfiles\fR object is the fully\-qualified pathname to a file\. These pathnames should be traversed in alphabetical order\. The associated value contains the \fBowner\fR, owning \fBgroup\fR, \fBmode\fR (a string containing the full 6\-digit octal representation), \fBcontent\fR, and the \fBencoding\fR of content (one of \fIplain\fR or \fIbase64\fR)\. Each file must be placed at its pathname and its metadata must be updated when the blueprint is applied\.
.
.P
The file\'s content may alternately be specified as \fBtemplate\fR and (optionally) \fBdata\fR which contain a \fBmustache\.sh\fR template in the \fBmustache\fR(5) format and POSIX shell code, respectively\. When a blueprint is applied, the template should be given as standard input to \fBmustache\.sh\fR with this data and other default data available in the environment\. The resulting standard output should be taken as the file\'s content\. A copy of \fBmustache\.sh\fR is distributed with Blueprint\.
.
.P
For compatibility with AWS \fBcfn\-init\fR, \fBsource\fR takes precedence over \fBcontent\fR\. If a file with a \fBsource\fR is encountered, the \fBsource\fR URL should be fetched as the file\'s content\. Blueprint will never generate such objects\.
.
.SS "Packages"
Each key within \fBpackages\fR names a package manager\. Each manager contains keys that name packages to be installed by that manager\. Each package name is associated with an array of versions that must be installed\. In most cases, for most managers, this array will have only one element\.
.
.P
Each manager is itself the name of a package that appears elsewhere\. \fBpackages\fR must be processed by starting with the \fBapt\fR, \fBrpm\fR, and \fByum\fR managers, installing their dependencies\. Any manager that was installed during this pass must next have its dependencies installed, continuing recursively until all managers and all dependencies have been installed\.
.
.P
For compatibility with AWS \fBcfn\-init\fR, the \fBrpm\fR manager is included\. Packages managed by \fBrpm\fR specify URLs in place of version numbers\. If such a package is encountered, the URL should be installed via \fBrpm\fR(1)\. Blueprint will never generate such objects\.
.
.SS "Services"
Each key within \fBservices\fR names a service manager\. Each manager contains keys that name services on the system\. Each service name is associated with a set of dependencies which themselves take a form much like a blueprint: \fBfiles\fR may be present and point to a list of pathnames; \fBpackages\fR may be present and point to a set of package managers which each point to a list of packages; \fBsources\fR may be present and point to a list of directory names\.
.
.P
If any of the resources on which the service depends are changed, upgraded, initailized, or otherwise acted upon, the service should be restarted\.
.
.P
For compatibility with AWS \fBcfn\-init\fR, \fB"enable": true\fR and \fB"ensure": "running"\fR are included with each service\. Blueprint ignores these when generating code\.
.
.SH "THEME SONG"
The Flaming Lips \- "The W\.A\.N\.D\. (The Will Always Negates Defeat)"
.
.SH "AUTHOR"
Richard Crowley \fIrichard@devstructure\.com\fR
.
.SH "SEE ALSO"
Part of \fBblueprint\fR(1)\.
.
.P
\fBmustache\fR(5) at \fIhttp://mustache\.github\.com/mustache\.5\.html\fR and \fBmustache\.sh\fR at \fIhttps://github\.com/rcrowley/mustache\.sh\fR\.
