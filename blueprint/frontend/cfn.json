{
  "AWSTemplateFormatVersion": "2010-09-09", 
  "Description": "Create an Amazon EC2 instance and bootstrap it as instructed by a blueprint.  This is intended to be a starting point for building larger architectures with AWS CloudFormation.  **WARNING** This template creates an Amazon EC2 instance.  You will be billed for the AWS resources used if you create a stack from this template.", 
  "Mappings": {
    "AWSInstanceType2Arch": {
      "c1.medium": {
        "Arch": "32"
      }, 
      "c1.xlarge": {
        "Arch": "64"
      }, 
      "cc1.4xlarge": {
        "Arch": "64"
      }, 
      "m1.large": {
        "Arch": "64"
      }, 
      "m1.small": {
        "Arch": "32"
      }, 
      "m1.xlarge": {
        "Arch": "64"
      }, 
      "m2.2xlarge": {
        "Arch": "64"
      }, 
      "m2.4xlarge": {
        "Arch": "64"
      }, 
      "m2.xlarge": {
        "Arch": "64"
      }, 
      "t1.micro": {
        "Arch": "32"
      }
    }, 
    "AWSRegionArch2AMI": {
      "ap-northeast-1": {
        "32": "ami-dcfa4edd", 
        "64": "ami-e8fa4ee9"
      }, 
      "ap-southeast-1": {
        "32": "ami-74dda626", 
        "64": "ami-7edda62c"
      }, 
      "eu-west-1": {
        "32": "ami-24506250", 
        "64": "ami-20506254"
      }, 
      "us-east-1": {
        "32": "ami-7f418316", 
        "64": "ami-7341831a"
      }, 
      "us-west-1": {
        "32": "ami-951945d0", 
        "64": "ami-971945d2"
      }
    }
  }, 
  "Outputs": {
    "PublicDnsName": {
      "Description": "Public DNS name of the EC2 instance.", 
      "Value": {
        "Fn::GetAtt": [
          "EC2Instance", 
          "PublicDnsName"
        ]
      }
    }
  }, 
  "Parameters": {
    "InstanceType": {
      "AllowedValues": [
        "t1.micro", 
        "m1.small", 
        "m1.large", 
        "m1.xlarge", 
        "m2.xlarge", 
        "m2.2xlarge", 
        "m2.4xlarge", 
        "c1.medium", 
        "c1.xlarge", 
        "cc1.4xlarge"
      ], 
      "ConstraintDescription": "must be a valid EC2 instance type.", 
      "Default": "m1.small", 
      "Description": "EC2 instance type.", 
      "Type": "String"
    }, 
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances", 
      "Type": "String"
    }
  }, 
  "Resources": {
    "CfnUser": {
      "Properties": {
        "Path": "/", 
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "cloudformation:DescribeStackResource", 
                  "Effect": "Allow", 
                  "Resource": "*"
                }
              ]
            }, 
            "PolicyName": "root"
          }
        ]
      }, 
      "Type": "AWS::IAM::User"
    }, 
    "EC2Instance": {
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {}
        }
      }, 
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI", 
            {
              "Ref": "AWS::Region"
            }, 
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch", 
                {
                  "Ref": "InstanceType"
                }, 
                "Arch"
              ]
            }
          ]
        }, 
        "InstanceType": {
          "Ref": "InstanceType"
        }, 
        "KeyName": {
          "Ref": "KeyName"
        }, 
        "SecurityGroups": [
          {
            "Ref": "SecurityGroup"
          }
        ], 
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "", 
              [
                "#!/bin/bash\n", 
                "/opt/aws/bin/cfn-init -s ", 
                {
                  "Ref": "AWS::StackName"
                }, 
                " -r EC2Instance ", 
                " --access-key ", 
                {
                  "Ref": "HostKeys"
                }, 
                " --secret-key ", 
                {
                  "Fn::GetAtt": [
                    "HostKeys", 
                    "SecretAccessKey"
                  ]
                }, 
                " --region ", 
                {
                  "Ref": "AWS::Region"
                }, 
                "\n", 
                "/opt/aws/bin/cfn-signal -e $? '", 
                {
                  "Ref": "WaitHandle"
                }, 
                "'\n"
              ]
            ]
          }
        }
      }, 
      "Type": "AWS::EC2::Instance"
    }, 
    "HostKeys": {
      "Properties": {
        "UserName": {
          "Ref": "CfnUser"
        }
      }, 
      "Type": "AWS::IAM::AccessKey"
    }, 
    "SecurityGroup": {
      "Properties": {
        "GroupDescription": "SSH access only.", 
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0", 
            "FromPort": "22", 
            "IpProtocol": "tcp", 
            "ToPort": "22"
          }
        ]
      }, 
      "Type": "AWS::EC2::SecurityGroup"
    }, 
    "WaitCondition": {
      "DependsOn": "EC2Instance", 
      "Properties": {
        "Handle": {
          "Ref": "WaitHandle"
        }, 
        "Timeout": "600"
      }, 
      "Type": "AWS::CloudFormation::WaitCondition"
    }, 
    "WaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    }
  }
}
